/* SPDX-License-Identifier: GPL-2.0-only */

/* NOTE: The following version based checks should work correctly
 * on stock kernels, but are unlikely to work as intended on heavily
 * backported kernels (such as what RHEL produces).
 *
 * Therefore, this file will soon be generated by a configuration
 * mechanism that determines available features of the target kernel
 * without having to check the linux code version.
 */
#include <linux/version.h>

#define HAVE_GENERATE_RANDOM_GUID \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(5, 7, 0))

#define HAVE_BIOSET_INIT \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 18, 0))

#define HAVE_BIOSET_CREATE_3 \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 13, 0))

#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 17, 0))
typedef int vm_fault_t;
#endif

#define HAVE_VMFAULT_VMF \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0))

#define HAVE_BDI_ALLOC \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))

#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 13, 0))
#define count_memcg_event_mm(_x, _y)    mem_cgroup_count_vm_event((_x), (_y))
#endif

#define HAVE_INVALIDATEPAGE_LENGTH \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0))

#define HAVE_ADDRESS_SPACE_BDI \
	(LINUX_VERSION_CODE < KERNEL_VERSION(4, 0, 0))

#define HAVE_IOV_ITER_INIT_DIRECTION \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(3, 16, 0))

#define HAVE_IOV_ITER_GET_PAGES \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(3, 16, 0))

#define HAVE_SCHED_CLOCK_H \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0))

#define HAVE_SHASH_DESC_FLAGS \
	(LINUX_VERSION_CODE < KERNEL_VERSION(5, 2, 0))

#if defined(BLKDEV_ZERO_NOUNMAP) || defined(BLKDEV_ZERO_NOFALLBACK)
#define HAVE_BLKDEV_ISSUE_ZEROOUT_FLAGS 1
#define HAVE_BLKDEV_ISSUE_ZEROOUT_DISCARD 0
#else
#define HAVE_BLKDEV_ISSUE_ZEROOUT_FLAGS 0
#define HAVE_BLKDEV_ISSUE_ZEROOUT_DISCARD \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
#endif

#define HAVE_SUBMIT_BIO_OP \
	(LINUX_VERSION_CODE < KERNEL_VERSION(4, 7, 0))

#define HAVE_BIO_SET_OP_ATTRS \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(3, 13, 0))

#define HAVE_BIO_SET_DEV \
	(LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0))
